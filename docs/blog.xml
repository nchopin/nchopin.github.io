<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Nicolas Chopin</title>
<link>https://nchopin.github.io/blog.html</link>
<atom:link href="https://nchopin.github.io/blog.xml" rel="self" type="application/rss+xml"/>
<description>NC&#39;s website</description>
<generator>quarto-1.3.433</generator>
<lastBuildDate>Mon, 26 Jun 2023 22:00:00 GMT</lastBuildDate>
<item>
  <title>New web-site</title>
  <dc:creator>Nicolas Chopin</dc:creator>
  <link>https://nchopin.github.io/posts/2023-06-27-test/index.html</link>
  <description><![CDATA[ 



<p>Hi everyone, welcome to my new, shiny, <a href="https://quarto.org/">quarto</a>-based web-site.</p>
<p>I moved my website to github a few years ago, and tried to use Jekyll, as recommended by the <a href="https://docs.github.com/en/pages">github pages</a> documentation. However, Jekyll seems to be a bit overkill for a simple academic website. I tried to start from this <a href="https://academicpages.github.io/">template</a>, but I found it difficult to adapt it even a little bit (and itâ€™s not maintained anymore)</p>
<p>Bottom line: I strongly recommend <a href="https://quarto.org/">quarto</a>, it took me much less time to obtain the website I am happy with, it also looks more flexible (for my use), the documentation is great, and I even managed to add this blog (which is not something I dared to do with Jekyll).</p>
<p>Also, math support is great: <img src="https://latex.codecogs.com/png.latex?2+%5Cint_0%5E1%20f(x)%20dx">. You can also type code:</p>
<div class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb1-3"></span>
<span id="cb1-4">r <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.arange(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span>)</span>
<span id="cb1-5">theta <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> np.pi <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> r</span>
<span id="cb1-6">fig, ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(</span>
<span id="cb1-7">  subplot_kw <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'projection'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'polar'</span>} </span>
<span id="cb1-8">)</span>
<span id="cb1-9">ax.plot(theta, r)</span>
<span id="cb1-10">ax.set_rticks([<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>])</span>
<span id="cb1-11">ax.grid(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb1-12">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div id="fig-polar" class="quarto-figure quarto-figure-center anchored">
<figure class="figure">
<p><img src="https://nchopin.github.io/posts/2023-06-27-test/index_files/figure-html/fig-polar-output-1.png" width="450" height="439" class="figure-img"></p>
<figcaption class="figure-caption">Figure&nbsp;1: A line plot on a polar axis</figcaption>
</figure>
</div>
</div>
</div>



 ]]></description>
  <category>tools</category>
  <guid>https://nchopin.github.io/posts/2023-06-27-test/index.html</guid>
  <pubDate>Mon, 26 Jun 2023 22:00:00 GMT</pubDate>
</item>
</channel>
</rss>
